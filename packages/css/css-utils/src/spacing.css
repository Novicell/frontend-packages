/*
// Spacing
*/
@import './_variables.css';

/* Without breakpoints */
@each $type, $name in (m, p), (margin, padding) {
  /* Zero and half values */
  @each $i in (0, 1) {
    .$(type)t-$(i) {
      $(name)-top: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
    .$(type)r-$(i) {
      $(name)-right: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
    .$(type)b-$(i) {
      $(name)-bottom: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
    .$(type)l-$(i) {
      $(name)-left: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
    .$(type)y-$(i) {
      $(name)-top: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
      $(name)-bottom: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
    .$(type)x-$(i) {
      $(name)-right: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
      $(name)-left: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
    }
  }

  /* The rest */
  @each $i in (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) {
    .$(type)t-$(i) {
      $(name)-top: calc(var(--int-css-utils-spacing-base) * $(i));
    }
    .$(type)r-$(i) {
      $(name)-right: calc(var(--int-css-utils-spacing-base) * $(i));
    }
    .$(type)b-$(i) {
      $(name)-bottom: calc(var(--int-css-utils-spacing-base) * $(i));
    }
    .$(type)l-$(i) {
      $(name)-left: calc(var(--int-css-utils-spacing-base) * $(i));
    }
    .$(type)y-$(i) {
      $(name)-top: calc(var(--int-css-utils-spacing-base) * $(i));
      $(name)-bottom: calc(var(--int-css-utils-spacing-base) * $(i));
    }
    .$(type)x-$(i) {
      $(name)-right: calc(var(--int-css-utils-spacing-base) * $(i));
      $(name)-left: calc(var(--int-css-utils-spacing-base) * $(i));
    }
  }
}

@each $type, $name in (m), (margin) {
  /* Auto values */
  .$(type)t-auto {
    $(name)-top: auto;
  }
  .$(type)r-auto {
    $(name)-right: auto;
  }
  .$(type)b-auto {
    $(name)-bottom: auto;
  }
  .$(type)l-auto {
    $(name)-left: auto;
  }
  .$(type)y-auto {
    $(name)-top: auto;
    $(name)-bottom: auto;
  }
  .$(type)x-auto {
    $(name)-right: auto;
    $(name)-left: auto;
  }
}

/* With breakpoints */
@each $breakpoint, $breakpoint-name in (ms, sm, md, lg, xl), (--viewport-ms-min, --viewport-sm-min, --viewport-md-min, --viewport-lg-min, --viewport-xl-min) {
  @media ($(breakpoint-name)) {
    /* Zero and half values */
    @each $i in (0, 1) {
      @each $type, $name in (m, p), (margin, padding) {
        .$(type)t-$(breakpoint)-$(i) {
          $(name)-top: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
        .$(type)r-$(breakpoint)-$(i) {
          $(name)-right: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
        .$(type)b-$(breakpoint)-$(i) {
          $(name)-bottom: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
        .$(type)l-$(breakpoint)-$(i) {
          $(name)-left: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
        .$(type)y-$(breakpoint)-$(i) {
          $(name)-top: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
          $(name)-bottom: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
        .$(type)x-$(breakpoint)-$(i) {
          $(name)-right: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
          $(name)-left: calc(var(--int-css-utils-spacing-base) / 2 * $(i));
        }
      }
    }

    /* The rest */
    @each $i in (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) {
      @each $type, $name in (m, p), (margin, padding) {
        .$(type)t-$(breakpoint)-$(i) {
          $(name)-top: calc(var(--int-css-utils-spacing-base) * $(i));
        }
        .$(type)r-$(breakpoint)-$(i) {
          $(name)-right: calc(var(--int-css-utils-spacing-base) * $(i));
        }
        .$(type)b-$(breakpoint)-$(i) {
          $(name)-bottom: calc(var(--int-css-utils-spacing-base) * $(i));
        }
        .$(type)l-$(breakpoint)-$(i) {
          $(name)-left: calc(var(--int-css-utils-spacing-base) * $(i));
        }
        .$(type)y-$(breakpoint)-$(i) {
          $(name)-top: calc(var(--int-css-utils-spacing-base) * $(i));
          $(name)-bottom: calc(var(--int-css-utils-spacing-base) * $(i));
        }
        .$(type)x-$(breakpoint)-$(i) {
          $(name)-right: calc(var(--int-css-utils-spacing-base) * $(i));
          $(name)-left: calc(var(--int-css-utils-spacing-base) * $(i));
        }
      }
    }

    /* Auto values */
    @each $type, $name in (m), (margin) {
      .$(type)t-$(breakpoint)-auto {
        $(name)-top: auto;
      }
      .$(type)r-$(breakpoint)-auto {
        $(name)-right: auto;
      }
      .$(type)b-$(breakpoint)-auto {
        $(name)-bottom: auto;
      }
      .$(type)l-$(breakpoint)-auto {
        $(name)-left: auto;
      }
      .$(type)y-$(breakpoint)-auto {
        $(name)-top: auto;
        $(name)-bottom: auto;
      }
      .$(type)x-$(breakpoint)-auto {
        $(name)-right: auto;
        $(name)-left: auto;
      }
    }
  }
}

